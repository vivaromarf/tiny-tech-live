{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/omarfvivar/Documents/Github/VanPro/Components/Elements/Button.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button as NBButton, Text, Spinner } from \"native-base\";\nimport Theme from \"./Theme\";\n\nvar Button = function Button(_ref) {\n  var label = _ref.label,\n      full = _ref.full,\n      primary = _ref.primary,\n      disabled = _ref.disabled,\n      transparent = _ref.transparent,\n      onPress = _ref.onPress,\n      style = _ref.style,\n      loading = _ref.loading,\n      textStyle = _ref.textStyle,\n      white = _ref.white;\n  var computedStyle = [styles.base];\n\n  if (primary && !transparent) {\n    computedStyle.push(styles.primary);\n  }\n\n  computedStyle.push(style);\n  return React.createElement(NBButton, _extends({\n    full: full,\n    primary: primary,\n    onPress: onPress,\n    style: computedStyle,\n    transparent: !primary || transparent,\n    disabled: disabled\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }), !!loading && React.createElement(Spinner, {\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }), !loading && React.createElement(Text, {\n    style: [primary ? Theme.typography.large : Theme.typography.regular, _objectSpread({\n      color: white ? \"white\" : disabled ? \"transparent\" : primary ? transparent ? Theme.palette.primary : \"white\" : Theme.typography.color,\n      fontSize: primary ? 16 : Theme.typography.regular.fontSize,\n      fontFamily: Theme.typography.semibold\n    }, textStyle)],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, label));\n};\n\nvar styles = StyleSheet.create({\n  base: {},\n  primary: {\n    shadowColor: \"rgba(0, 170, 255, 0.29)\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 1,\n    shadowRadius: 7\n  }\n});\nexport default Button;","map":{"version":3,"sources":["/Users/omarfvivar/Documents/Github/VanPro/Components/Elements/Button.js"],"names":["React","Button","NBButton","Text","Spinner","Theme","label","full","primary","disabled","transparent","onPress","style","loading","textStyle","white","computedStyle","styles","base","push","typography","large","regular","color","palette","fontSize","fontFamily","semibold","StyleSheet","create","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,SAASC,MAAM,IAAIC,QAAnB,EAA6BC,IAA7B,EAAmCC,OAAnC,QAAkD,aAAlD;AACA,OAAOC,KAAP;;AAEA,IAAMJ,MAAM,GAAG,SAATA,MAAS,OAAgG;AAAA,MAA7FK,KAA6F,QAA7FA,KAA6F;AAAA,MAAtFC,IAAsF,QAAtFA,IAAsF;AAAA,MAAhFC,OAAgF,QAAhFA,OAAgF;AAAA,MAAvEC,QAAuE,QAAvEA,QAAuE;AAAA,MAA7DC,WAA6D,QAA7DA,WAA6D;AAAA,MAAhDC,OAAgD,QAAhDA,OAAgD;AAAA,MAAvCC,KAAuC,QAAvCA,KAAuC;AAAA,MAAhCC,OAAgC,QAAhCA,OAAgC;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC7G,MAAMC,aAAa,GAAG,CAACC,MAAM,CAACC,IAAR,CAAtB;;AACA,MAAIV,OAAO,IAAI,CAACE,WAAhB,EAA6B;AAC3BM,IAAAA,aAAa,CAACG,IAAd,CAAmBF,MAAM,CAACT,OAA1B;AACD;;AACDQ,EAAAA,aAAa,CAACG,IAAd,CAAmBP,KAAnB;AACA,SACE,oBAAC,QAAD,WACM;AACFL,IAAAA,IAAI,EAAJA,IADE;AAEFC,IAAAA,OAAO,EAAPA,OAFE;AAGFG,IAAAA,OAAO,EAAPA,OAHE;AAIFC,IAAAA,KAAK,EAAEI,aAJL;AAKFN,IAAAA,WAAW,EAAE,CAACF,OAAD,IAAYE,WALvB;AAMFD,IAAAA,QAAQ,EAARA;AANE,GADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUG,CAAC,CAACI,OAAF,IAAa,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVhB,EAWG,CAACA,OAAD,IACC,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLL,OAAO,GAAGH,KAAK,CAACe,UAAN,CAAiBC,KAApB,GAA4BhB,KAAK,CAACe,UAAN,CAAiBE,OAD/C;AAGHC,MAAAA,KAAK,EAAER,KAAK,GACR,OADQ,GAERN,QAAQ,GACR,aADQ,GAERD,OAAO,GACPE,WAAW,GACTL,KAAK,CAACmB,OAAN,CAAchB,OADL,GAET,OAHK,GAIPH,KAAK,CAACe,UAAN,CAAiBG,KAXlB;AAYHE,MAAAA,QAAQ,EAAEjB,OAAO,GAAG,EAAH,GAAQH,KAAK,CAACe,UAAN,CAAiBE,OAAjB,CAAyBG,QAZ/C;AAaHC,MAAAA,UAAU,EAAErB,KAAK,CAACe,UAAN,CAAiBO;AAb1B,OAcAb,SAdA,EADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAmBGR,KAnBH,CAZJ,CADF;AAqCD,CA3CD;;AA6CA,IAAMW,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,IAAI,EAAE,EADyB;AAE/BV,EAAAA,OAAO,EAAE;AACPsB,IAAAA,WAAW,EAAE,yBADN;AAEPC,IAAAA,YAAY,EAAE;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAFP;AAGPC,IAAAA,aAAa,EAAE,CAHR;AAIPC,IAAAA,YAAY,EAAE;AAJP;AAFsB,CAAlB,CAAf;AAUA,eAAelC,MAAf","sourcesContent":["import * as React from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { Button as NBButton, Text, Spinner } from \"native-base\";\nimport Theme from \"./Theme\";\n\nconst Button = ({ label, full, primary, disabled, transparent, onPress, style, loading, textStyle, white }) => {\n  const computedStyle = [styles.base];\n  if (primary && !transparent) {\n    computedStyle.push(styles.primary);\n  }\n  computedStyle.push(style);\n  return (\n    <NBButton\n      {...{\n        full,\n        primary,\n        onPress,\n        style: computedStyle,\n        transparent: !primary || transparent,\n        disabled\n      }}\n    >\n      {!!loading && <Spinner color=\"white\" />}\n      {!loading && (\n        <Text\n          style={[\n            primary ? Theme.typography.large : Theme.typography.regular,\n            {\n              color: white\n                ? \"white\"\n                : disabled\n                ? \"transparent\"\n                : primary\n                ? transparent\n                  ? Theme.palette.primary\n                  : \"white\"\n                : Theme.typography.color,\n              fontSize: primary ? 16 : Theme.typography.regular.fontSize,\n              fontFamily: Theme.typography.semibold,\n              ...textStyle\n            }\n          ]}\n        >\n          {label}\n        </Text>\n      )}\n    </NBButton>\n  );\n};\n\nconst styles = StyleSheet.create({\n  base: {},\n  primary: {\n    shadowColor: \"rgba(0, 170, 255, 0.29)\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 1,\n    shadowRadius: 7\n  }\n});\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}