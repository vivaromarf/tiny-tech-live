{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/omarfvivar/Documents/Github/VanPro/Components/Pages/Home.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Constants from \"expo-constants\";\nimport Theme from \"../Elements/Theme\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\n\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"test\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      updateEmail = _useState2[1];\n\n  var _useState3 = useState(new Animated.Value(0)),\n      _useState4 = _slicedToArray(_useState3, 1),\n      scrollAnimation = _useState4[0];\n\n  AsyncStorage.getItem(\"email\").then(function (email) {\n    updateEmail(email);\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"\\\"test\\\"\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, email));\n};\n\nvar avatarSize = 100;\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width;\n\nvar statusBarHeight = Constants.statusBarHeight;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  list: {\n    flex: 1\n  },\n  post: {\n    paddingHorizontal: Theme.spacing.small\n  },\n  header: {\n    marginBottom: avatarSize * 0.5 + Theme.spacing.small,\n    height: width\n  },\n  cover: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    width: width,\n    height: width\n  }),\n  avatar: {\n    position: \"absolute\",\n    right: Theme.spacing.small,\n    bottom: -avatarSize * 0.5\n  },\n  settings: {\n    position: \"absolute\",\n    top: statusBarHeight + Theme.spacing.small,\n    right: Theme.spacing.base,\n    backgroundColor: \"transparent\",\n    zIndex: 10000\n  },\n  title: {\n    position: \"absolute\",\n    left: Theme.spacing.small,\n    bottom: 50 + Theme.spacing.small\n  },\n  outline: {\n    color: \"rgba(255, 255, 255, 0.8)\"\n  },\n  name: {\n    color: \"white\"\n  }\n});\nexport default Home;","map":{"version":3,"sources":["/Users/omarfvivar/Documents/Github/VanPro/Components/Pages/Home.js"],"names":["React","useState","useEffect","Constants","Theme","Home","navigation","email","updateEmail","Animated","Value","scrollAnimation","AsyncStorage","getItem","then","styles","container","avatarSize","Dimensions","get","width","statusBarHeight","StyleSheet","create","flex","list","post","paddingHorizontal","spacing","small","header","marginBottom","height","cover","absoluteFillObject","avatar","position","right","bottom","settings","top","base","backgroundColor","zIndex","title","left","outline","color","name"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA,OAAOC,KAAP;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,kBAEHL,QAAQ,CAAC,MAAD,CAFL;AAAA;AAAA,MAExBM,KAFwB;AAAA,MAElBC,WAFkB;;AAAA,mBAKLP,QAAQ,CAAC,IAAIQ,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CALH;AAAA;AAAA,MAKxBC,eALwB;;AAO/BC,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAA9B,CAAmC,UAAAP,KAAK,EAAI;AAC1CC,IAAAA,WAAW,CAACD,KAAD,CAAX;AACD,GAFD;AAKA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAKQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACHT,KADG,CALR,CADF;AAWD,CAvBD;;AAyBA,IAAMU,UAAU,GAAG,GAAnB;;sBACkBC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAVC,K,mBAAAA,K;;IACAC,e,GAAoBlB,S,CAApBkB,e;AAER,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE;AADG,GADoB;AAI/BC,EAAAA,IAAI,EAAE;AACJD,IAAAA,IAAI,EAAE;AADF,GAJyB;AAO/BE,EAAAA,IAAI,EAAE;AACJC,IAAAA,iBAAiB,EAAEvB,KAAK,CAACwB,OAAN,CAAcC;AAD7B,GAPyB;AAU/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,YAAY,EAAEd,UAAU,GAAG,GAAb,GAAmBb,KAAK,CAACwB,OAAN,CAAcC,KADzC;AAENG,IAAAA,MAAM,EAAEZ;AAFF,GAVuB;AAc/Ba,EAAAA,KAAK,kCACAX,UAAU,CAACY,kBADX;AAEHd,IAAAA,KAAK,EAALA,KAFG;AAGHY,IAAAA,MAAM,EAAEZ;AAHL,IAd0B;AAmB/Be,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,UADJ;AAENC,IAAAA,KAAK,EAAEjC,KAAK,CAACwB,OAAN,CAAcC,KAFf;AAGNS,IAAAA,MAAM,EAAE,CAACrB,UAAD,GAAc;AAHhB,GAnBuB;AAwB/BsB,EAAAA,QAAQ,EAAE;AACRH,IAAAA,QAAQ,EAAE,UADF;AAERI,IAAAA,GAAG,EAAEnB,eAAe,GAAGjB,KAAK,CAACwB,OAAN,CAAcC,KAF7B;AAGRQ,IAAAA,KAAK,EAAEjC,KAAK,CAACwB,OAAN,CAAca,IAHb;AAIRC,IAAAA,eAAe,EAAE,aAJT;AAKRC,IAAAA,MAAM,EAAE;AALA,GAxBqB;AA+B/BC,EAAAA,KAAK,EAAE;AACLR,IAAAA,QAAQ,EAAE,UADL;AAELS,IAAAA,IAAI,EAAEzC,KAAK,CAACwB,OAAN,CAAcC,KAFf;AAGLS,IAAAA,MAAM,EAAE,KAAKlC,KAAK,CAACwB,OAAN,CAAcC;AAHtB,GA/BwB;AAoC/BiB,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE;AADA,GApCsB;AAuC/BC,EAAAA,IAAI,EAAE;AACJD,IAAAA,KAAK,EAAE;AADH;AAvCyB,CAAlB,CAAf;AA4CA,eAAe1C,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, StyleSheet, Dimensions, Animated,Text } from \"react-native\";\nimport Constants from \"expo-constants\";\n\nimport Theme from \"../Elements/Theme\";\nimport { AsyncStorage } from \"react-native\";\nconst Home = ({ navigation }) => {\n\n  const [email,updateEmail] = useState(\"test\")\n\n\n  const [scrollAnimation] = useState(new Animated.Value(0));\n\n  AsyncStorage.getItem(\"email\").then(email => {\n    updateEmail(email)\n  });\n\n\n  return (\n    <View style={styles.container}>\n      <Text>\n      \"test\"\n      </Text>\n\n            <Text>\n        {email}\n      </Text>\n    </View>\n  );\n};\n\nconst avatarSize = 100;\nconst { width } = Dimensions.get(\"window\");\nconst { statusBarHeight } = Constants;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  list: {\n    flex: 1\n  },\n  post: {\n    paddingHorizontal: Theme.spacing.small\n  },\n  header: {\n    marginBottom: avatarSize * 0.5 + Theme.spacing.small,\n    height: width\n  },\n  cover: {\n    ...StyleSheet.absoluteFillObject,\n    width,\n    height: width\n  },\n  avatar: {\n    position: \"absolute\",\n    right: Theme.spacing.small,\n    bottom: -avatarSize * 0.5\n  },\n  settings: {\n    position: \"absolute\",\n    top: statusBarHeight + Theme.spacing.small,\n    right: Theme.spacing.base,\n    backgroundColor: \"transparent\",\n    zIndex: 10000\n  },\n  title: {\n    position: \"absolute\",\n    left: Theme.spacing.small,\n    bottom: 50 + Theme.spacing.small\n  },\n  outline: {\n    color: \"rgba(255, 255, 255, 0.8)\"\n  },\n  name: {\n    color: \"white\"\n  }\n});\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}