{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/omarfvivar/Documents/Github/VanPro/Components/Pages/SignUpEmail.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text1 from \"react-native-web/dist/exports/Text\";\nimport { Snackbar } from \"react-native-paper\";\nimport SignUpContainer from \"../Layouts/SignUpContainer\";\nimport { TextField } from \"../Elements/Fields\";\n\nvar SignUpEmail = function SignUpEmail(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      updateEmail = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      message = _useState6[0],\n      setMessage = _useState6[1];\n\n  var _onDismissSnackBar = function _onDismissSnackBar() {\n    setVisible(0), setMessage(\"\");\n  };\n\n  var snackbar = function snackbar(visible, message) {\n    return React.createElement(Snackbar, {\n      visible: visible,\n      onDismiss: _onDismissSnackBar,\n      style: styles.snackbar,\n      action: {\n        label: \"OK\",\n        onPress: function onPress() {}\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, React.createElement(Text1, {\n      style: styles.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, message));\n  };\n\n  var onSubmit = function onSubmit() {\n    if (email === \"\") {\n      setMessage(\"Email can't be empty.\");\n      setVisible(1);\n    } else {\n      var username = navigation.getParam(\"username\");\n      navigation.navigate(\"SignUpPassword\", {\n        email: email,\n        username: username\n      });\n    }\n  };\n\n  return React.createElement(SignUpContainer, _extends({\n    title: \"Your Email\",\n    subtitle: \"We won't spam\",\n    back: function back() {\n      return navigation.navigate(\"Welcome\");\n    },\n    next: onSubmit,\n    snackbar: snackbar(visible, message)\n  }, {\n    navigation: navigation\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }), React.createElement(TextField, {\n    placeholder: \"Email\",\n    keyboardType: \"email-address\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    returnKeyType: \"go\",\n    onChangeText: updateEmail,\n    value: email,\n    contrast: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width;\n\nvar styles = StyleSheet.create({\n  snackbar: {\n    position: \"absolute\",\n    bottom: 25,\n    left: width * 0.1,\n    width: width * 0.8\n  },\n  message: {\n    fontFamily: \"SFProText-Medium\",\n    color: \"#FFF\",\n    fontSize: 14\n  }\n});\nexport default SignUpEmail;","map":{"version":3,"sources":["/Users/omarfvivar/Documents/Github/VanPro/Components/Pages/SignUpEmail.js"],"names":["React","useState","Snackbar","SignUpContainer","TextField","SignUpEmail","navigation","email","updateEmail","visible","setVisible","message","setMessage","_onDismissSnackBar","snackbar","styles","label","onPress","onSubmit","username","getParam","navigate","Dimensions","get","width","StyleSheet","create","position","bottom","left","fontFamily","color","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, Dimensions, Text as Text1 } from \"react-native\";\nimport { Snackbar } from \"react-native-paper\";\n\nimport SignUpContainer from \"../Layouts/SignUpContainer\";\nimport { TextField } from \"../Elements/Fields\";\n\nconst SignUpEmail = ({ navigation }) => {\n  const [email, updateEmail] = useState(\"\");\n  const [visible, setVisible] = useState(0);\n  const [message, setMessage] = useState(\"\");\n\n  const _onDismissSnackBar = () => {\n    setVisible(0), setMessage(\"\");\n  };\n\n  const snackbar = (visible, message) => {\n    return (\n      <Snackbar\n        visible={visible}\n        onDismiss={_onDismissSnackBar}\n        style={styles.snackbar}\n        action={{\n          label: \"OK\",\n          onPress: () => {}\n        }}\n      >\n        <Text1 style={styles.message}>{message}</Text1>\n      </Snackbar>\n    );\n  };\n\n  const onSubmit = () => {\n    if (email === \"\") {\n      setMessage(\"Email can't be empty.\");\n      setVisible(1);\n    } else {\n      const username = navigation.getParam(\"username\");\n      navigation.navigate(\"SignUpPassword\", { email, username });\n    }\n  };\n\n  return (\n    <SignUpContainer\n      title=\"Your Email\"\n      subtitle=\"We won't spam\"\n      back={() => navigation.navigate(\"Welcome\")}\n      next={onSubmit}\n      snackbar={snackbar(visible, message)}\n      {...{ navigation }}\n    >\n      <TextField\n        placeholder=\"Email\"\n        keyboardType=\"email-address\"\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n        returnKeyType=\"go\"\n        onChangeText={updateEmail}\n        value={email}\n        contrast\n      />\n    </SignUpContainer>\n  );\n};\n\nconst { width } = Dimensions.get(\"window\");\n\nconst styles = StyleSheet.create({\n  snackbar: {\n    position: \"absolute\",\n    bottom: 25,\n    left: width * 0.1,\n    width: width * 0.8\n  },\n  message: {\n    fontFamily: \"SFProText-Medium\",\n    color: \"#FFF\",\n    fontSize: 14\n  }\n});\n\nexport default SignUpEmail;\n"]},"metadata":{},"sourceType":"module"}