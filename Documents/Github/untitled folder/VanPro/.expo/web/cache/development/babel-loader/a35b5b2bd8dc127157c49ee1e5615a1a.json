{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/omarfvivar/Documents/Github/VanPro/Components/Elements/Text.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport RNText from \"react-native-web/dist/exports/Text\";\nimport Theme from \"./Theme\";\nexport var TextClass = function (_React$Component) {\n  _inherits(TextClass, _React$Component);\n\n  var _super = _createSuper(TextClass);\n\n  function TextClass() {\n    _classCallCheck(this, TextClass);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TextClass, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          type = _this$props.type,\n          style = _this$props.style,\n          numberOfLines = _this$props.numberOfLines,\n          gutterBottom = _this$props.gutterBottom,\n          children = _this$props.children;\n      var defaultStyle = [Theme.typography[type], {\n        backgroundColor: \"transparent\"\n      }];\n      var isHeader = type.startsWith(\"header\");\n      defaultStyle.push({\n        color: isHeader ? \"black\" : type === \"large\" ? Theme.palette.lightGray : Theme.typography.color,\n        marginBottom: gutterBottom ? isHeader ? Theme.spacing.base : Theme.spacing.small : 0\n      });\n      defaultStyle.push(style);\n      return React.createElement(RNText, _extends({\n        style: defaultStyle\n      }, {\n        numberOfLines: numberOfLines\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }\n      }), type === \"large\" ? children.toUpperCase() : children);\n    }\n  }]);\n\n  return TextClass;\n}(React.Component);\n\nvar Text = function Text(_ref) {\n  var type = _ref.type,\n      style = _ref.style,\n      numberOfLines = _ref.numberOfLines,\n      gutterBottom = _ref.gutterBottom,\n      children = _ref.children;\n  var base_type = type || \"regular\";\n  var defaultStyle = [Theme.typography[base_type], {\n    backgroundColor: \"transparent\"\n  }];\n  var isHeader = base_type.startsWith(\"header\");\n  defaultStyle.push({\n    color: isHeader ? \"black\" : base_type === \"large\" ? Theme.palette.lightGray : Theme.typography.color,\n    marginBottom: gutterBottom ? isHeader ? Theme.spacing.base : Theme.spacing.small : 0\n  });\n  defaultStyle.push(style);\n  return React.createElement(RNText, _extends({\n    style: defaultStyle\n  }, {\n    numberOfLines: numberOfLines\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }), base_type === \"large\" ? children.toUpperCase() : children);\n};\n\nexport default Text;","map":{"version":3,"sources":["/Users/omarfvivar/Documents/Github/VanPro/Components/Elements/Text.js"],"names":["React","Theme","TextClass","props","type","style","numberOfLines","gutterBottom","children","defaultStyle","typography","backgroundColor","isHeader","startsWith","push","color","palette","lightGray","marginBottom","spacing","base","small","toUpperCase","Component","Text","base_type"],"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,OAAOC,KAAP;AAEA,WAAaC,SAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACW;AAAA,wBACwD,KAAKC,KAD7D;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,KADP,eACOA,KADP;AAAA,UACcC,aADd,eACcA,aADd;AAAA,UAC6BC,YAD7B,eAC6BA,YAD7B;AAAA,UAC2CC,QAD3C,eAC2CA,QAD3C;AAEP,UAAMC,YAAY,GAAG,CAACR,KAAK,CAACS,UAAN,CAAiBN,IAAjB,CAAD,EAAyB;AAAEO,QAAAA,eAAe,EAAE;AAAnB,OAAzB,CAArB;AACA,UAAMC,QAAQ,GAAGR,IAAI,CAACS,UAAL,CAAgB,QAAhB,CAAjB;AACAJ,MAAAA,YAAY,CAACK,IAAb,CAAkB;AAEhBC,QAAAA,KAAK,EAAEH,QAAQ,GAAG,OAAH,GAAaR,IAAI,KAAK,OAAT,GAAmBH,KAAK,CAACe,OAAN,CAAcC,SAAjC,GAA6ChB,KAAK,CAACS,UAAN,CAAiBK,KAF1E;AAIhBG,QAAAA,YAAY,EAAEX,YAAY,GAAIK,QAAQ,GAAGX,KAAK,CAACkB,OAAN,CAAcC,IAAjB,GAAwBnB,KAAK,CAACkB,OAAN,CAAcE,KAAlD,GAA2D;AAJrE,OAAlB;AAMAZ,MAAAA,YAAY,CAACK,IAAb,CAAkBT,KAAlB;AACA,aACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAEI;AAAf,SAAiC;AAAEH,QAAAA,aAAa,EAAbA;AAAF,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGF,IAAI,KAAK,OAAT,GAAmBI,QAAQ,CAACc,WAAT,EAAnB,GAA4Cd,QAD/C,CADF;AAKD;AAjBH;;AAAA;AAAA,EAA+BR,KAAK,CAACuB,SAArC;;AAoBA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAA4D;AAAA,MAAzDpB,IAAyD,QAAzDA,IAAyD;AAAA,MAAnDC,KAAmD,QAAnDA,KAAmD;AAAA,MAA5CC,aAA4C,QAA5CA,aAA4C;AAAA,MAA7BC,YAA6B,QAA7BA,YAA6B;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACvE,MAAMiB,SAAS,GAAGrB,IAAI,IAAI,SAA1B;AACA,MAAMK,YAAY,GAAG,CAACR,KAAK,CAACS,UAAN,CAAiBe,SAAjB,CAAD,EAA8B;AAAEd,IAAAA,eAAe,EAAE;AAAnB,GAA9B,CAArB;AACA,MAAMC,QAAQ,GAAGa,SAAS,CAACZ,UAAV,CAAqB,QAArB,CAAjB;AACAJ,EAAAA,YAAY,CAACK,IAAb,CAAkB;AAEhBC,IAAAA,KAAK,EAAEH,QAAQ,GAAG,OAAH,GAAaa,SAAS,KAAK,OAAd,GAAwBxB,KAAK,CAACe,OAAN,CAAcC,SAAtC,GAAkDhB,KAAK,CAACS,UAAN,CAAiBK,KAF/E;AAIhBG,IAAAA,YAAY,EAAEX,YAAY,GAAIK,QAAQ,GAAGX,KAAK,CAACkB,OAAN,CAAcC,IAAjB,GAAwBnB,KAAK,CAACkB,OAAN,CAAcE,KAAlD,GAA2D;AAJrE,GAAlB;AAMAZ,EAAAA,YAAY,CAACK,IAAb,CAAkBT,KAAlB;AACA,SACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEI;AAAf,KAAiC;AAAEH,IAAAA,aAAa,EAAbA;AAAF,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGmB,SAAS,KAAK,OAAd,GAAwBjB,QAAQ,CAACc,WAAT,EAAxB,GAAiDd,QADpD,CADF;AAKD,CAhBD;;AAkBA,eAAegB,IAAf","sourcesContent":["import * as React from \"react\";\nimport { Text as RNText } from \"react-native\";\nimport Theme from \"./Theme\";\n\nexport class TextClass extends React.Component {\n  render() {\n    const { type, style, numberOfLines, gutterBottom, children } = this.props;\n    const defaultStyle = [Theme.typography[type], { backgroundColor: \"transparent\" }];\n    const isHeader = type.startsWith(\"header\");\n    defaultStyle.push({\n      // eslint-disable-next-line\n      color: isHeader ? \"black\" : type === \"large\" ? Theme.palette.lightGray : Theme.typography.color,\n      // eslint-disable-next-line\n      marginBottom: gutterBottom ? (isHeader ? Theme.spacing.base : Theme.spacing.small) : 0\n    });\n    defaultStyle.push(style);\n    return (\n      <RNText style={defaultStyle} {...{ numberOfLines }}>\n        {type === \"large\" ? children.toUpperCase() : children}\n      </RNText>\n    );\n  }\n}\n\nconst Text = ({ type, style, numberOfLines, gutterBottom, children }) => {\n  const base_type = type || \"regular\";\n  const defaultStyle = [Theme.typography[base_type], { backgroundColor: \"transparent\" }];\n  const isHeader = base_type.startsWith(\"header\");\n  defaultStyle.push({\n    // eslint-disable-next-line\n    color: isHeader ? \"black\" : base_type === \"large\" ? Theme.palette.lightGray : Theme.typography.color,\n    // eslint-disable-next-line\n    marginBottom: gutterBottom ? (isHeader ? Theme.spacing.base : Theme.spacing.small) : 0\n  });\n  defaultStyle.push(style);\n  return (\n    <RNText style={defaultStyle} {...{ numberOfLines }}>\n      {base_type === \"large\" ? children.toUpperCase() : children}\n    </RNText>\n  );\n};\n\nexport default Text;\n"]},"metadata":{},"sourceType":"module"}