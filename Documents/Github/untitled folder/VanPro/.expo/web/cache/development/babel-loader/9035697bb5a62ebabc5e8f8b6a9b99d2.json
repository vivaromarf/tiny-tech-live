{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/omarfvivar/Documents/Github/VanPro/Components/Pages/Login.js\";\nimport React, { useState } from \"react\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Snackbar } from \"react-native-paper\";\nimport { TextField } from \"../Elements/Fields\";\nimport SignUpContainer from \"../Layouts/SignUpContainer\";\nimport { firebase, firebase_sign_in_anonymous, firebase_sign_up, firebase_sign_in, firebase_sign_out } from \"../../firebase\";\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      updateLoading = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      updatePassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      updateEmail = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      visible = _useState8[0],\n      setVisible = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      message = _useState10[0],\n      setMessage = _useState10[1];\n\n  var _onDismissSnackBar = function _onDismissSnackBar() {\n    setVisible(0), setMessage(\"\");\n  };\n\n  var onLoginSubmit = function onLoginSubmit() {\n    if (email === \"\") {\n      setMessage(\"Email can't be empty.\");\n      setVisible(1);\n    } else if (password === \"\") {\n      setMessage(\"Password can't be empty.\");\n      setVisible(1);\n    } else {\n      updateLoading(true);\n      firebase_sign_in({\n        email: email,\n        password: password\n      }).then(function (response) {\n        var uid = response.user.uid;\n        var usersRef = firebase.firestore().collection(\"users\");\n        usersRef.doc(uid).get().then(function (firestoreDocument) {\n          if (!firestoreDocument.exists) {\n            alert(\"User does not exist anymore.\");\n            return;\n          }\n\n          var user = firestoreDocument.data();\n          navigation.navigate(\"Home\", {\n            user: user\n          });\n        }).catch(function (error) {\n          alert(error);\n        });\n      }).catch(function (error) {\n        updateLoading(false);\n        console.log({\n          error: error\n        });\n\n        if (error.message === \"Request failed with status code 404\") {\n          setMessage(\"User not found\");\n        } else if (error.message === \"Request failed with status code 401\") {\n          setMessage(\"Incorrect Password\");\n        }\n\n        setVisible(1);\n      });\n    }\n  };\n\n  var snackbar = function snackbar(visible, message) {\n    return React.createElement(Snackbar, {\n      visible: visible,\n      onDismiss: _onDismissSnackBar,\n      style: styles.snackbar,\n      action: {\n        label: \"OK\",\n        onPress: function onPress() {}\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, message));\n  };\n\n  return React.createElement(SignUpContainer, _extends({\n    title: \"Login\",\n    back: function back() {\n      return navigation.navigate(\"Welcome\");\n    },\n    subtitle: \"Get Started\",\n    nextLabel: \"Login\",\n    next: onLoginSubmit,\n    first: true,\n    snackbar: snackbar(visible, message),\n    loading: loading\n  }, {\n    navigation: navigation\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }), React.createElement(TextField, {\n    placeholder: \"Email\",\n    keyboardType: \"email-address\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    onChangeText: updateEmail,\n    value: email,\n    returnKeyType: \"next\",\n    contrast: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), React.createElement(TextField, {\n    placeholder: \"Password\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    returnKeyType: \"go\",\n    onChangeText: updatePassword,\n    value: password,\n    secureTextEntry: true,\n    contrast: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar styles = StyleSheet.create({\n  snackbar: {\n    position: \"absolute\",\n    bottom: 25,\n    left: width * 0.1,\n    width: width * 0.8\n  },\n  message: {\n    fontFamily: \"SFProText-Medium\",\n    color: \"#FFF\",\n    fontSize: 14\n  }\n});\nexport default Login;","map":{"version":3,"sources":["/Users/omarfvivar/Documents/Github/VanPro/Components/Pages/Login.js"],"names":["React","useState","Snackbar","TextField","SignUpContainer","firebase","firebase_sign_in_anonymous","firebase_sign_up","firebase_sign_in","firebase_sign_out","Login","navigation","loading","updateLoading","password","updatePassword","email","updateEmail","visible","setVisible","message","setMessage","_onDismissSnackBar","onLoginSubmit","then","response","uid","user","usersRef","firestore","collection","doc","get","firestoreDocument","exists","alert","data","navigate","catch","error","console","log","snackbar","styles","label","onPress","Dimensions","width","height","StyleSheet","create","position","bottom","left","fontFamily","color","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { AsyncStorage, Dimensions, StyleSheet, Text } from \"react-native\";\nimport { Snackbar } from \"react-native-paper\";\nimport { TextField } from \"../Elements/Fields\";\nimport SignUpContainer from \"../Layouts/SignUpContainer\";\nimport { firebase, firebase_sign_in_anonymous, firebase_sign_up, firebase_sign_in, firebase_sign_out } from \"../../firebase\";\n\nconst Login = ({ navigation }) => {\n  const [loading, updateLoading] = useState(false);\n\n  const [password, updatePassword] = useState(\"\");\n  const [email, updateEmail] = useState(\"\");\n  const [visible, setVisible] = useState(0);\n  const [message, setMessage] = useState(\"\");\n\n  const _onDismissSnackBar = () => {\n    setVisible(0), setMessage(\"\");\n  };\n\n  const onLoginSubmit = () => {\n    if (email === \"\") {\n      setMessage(\"Email can't be empty.\");\n      setVisible(1);\n    } else if (password === \"\") {\n      setMessage(\"Password can't be empty.\");\n      setVisible(1);\n    } else {\n      updateLoading(true);\n      firebase_sign_in({ email, password })\n        .then(response => {\n          const uid = response.user.uid;\n          const usersRef = firebase.firestore().collection(\"users\");\n          usersRef\n            .doc(uid)\n            .get()\n            .then(firestoreDocument => {\n              if (!firestoreDocument.exists) {\n                alert(\"User does not exist anymore.\");\n                return;\n              }\n              const user = firestoreDocument.data();\n              navigation.navigate(\"Home\", { user: user });\n            })\n            .catch(error => {\n              alert(error);\n            });\n        })\n        .catch(error => {\n          updateLoading(false);\n          console.log({ error });\n          if (error.message === \"Request failed with status code 404\") {\n            setMessage(\"User not found\");\n          } else if (error.message === \"Request failed with status code 401\") {\n            setMessage(\"Incorrect Password\");\n          }\n          setVisible(1);\n        });\n    }\n  };\n\n  const snackbar = (visible, message) => {\n    return (\n      <Snackbar\n        visible={visible}\n        onDismiss={_onDismissSnackBar}\n        style={styles.snackbar}\n        action={{\n          label: \"OK\",\n          onPress: () => {\n            // Do something\n          }\n        }}\n      >\n        <Text style={styles.message}>{message}</Text>\n      </Snackbar>\n    );\n  };\n\n  return (\n    <SignUpContainer\n      title=\"Login\"\n      back={() => navigation.navigate(\"Welcome\")}\n      subtitle=\"Get Started\"\n      nextLabel=\"Login\"\n      next={onLoginSubmit}\n      first\n      snackbar={snackbar(visible, message)}\n      loading={loading}\n      {...{ navigation }}\n    >\n      <TextField\n        placeholder=\"Email\"\n        keyboardType=\"email-address\"\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n        onChangeText={updateEmail}\n        value={email}\n        returnKeyType=\"next\"\n        contrast\n      />\n      <TextField\n        placeholder=\"Password\"\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n        returnKeyType=\"go\"\n        onChangeText={updatePassword}\n        value={password}\n        secureTextEntry\n        contrast\n      />\n    </SignUpContainer>\n  );\n};\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst styles = StyleSheet.create({\n  snackbar: {\n    position: \"absolute\",\n    bottom: 25,\n    left: width * 0.1,\n    width: width * 0.8\n  },\n  message: {\n    fontFamily: \"SFProText-Medium\",\n    color: \"#FFF\",\n    fontSize: 14\n  }\n});\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}