{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/omarfvivar/Documents/Github/VanPro/node_modules/react-native-neomorph-shadows/src/InnerShadowART.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { ShadowARTType } from \"./types\";\nimport { Surface, Shape, Group } from '@react-native-community/art';\nimport { getPathWithRadius, transformShadowPropsForAndroid } from \"./helpers\";\n\nvar InnerShadowART = function (_React$PureComponent) {\n  _inherits(InnerShadowART, _React$PureComponent);\n\n  var _super = _createSuper(InnerShadowART);\n\n  function InnerShadowART() {\n    _classCallCheck(this, InnerShadowART);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(InnerShadowART, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$width = _this$props.width,\n          width = _this$props$width === void 0 ? 0 : _this$props$width,\n          _this$props$height = _this$props.height,\n          height = _this$props$height === void 0 ? 0 : _this$props$height,\n          borderRadius = _this$props.borderRadius,\n          shadowRadius = _this$props.shadowRadius,\n          shadowOffset = _this$props.shadowOffset,\n          shadowOpacity = _this$props.shadowOpacity,\n          shadowColor = _this$props.shadowColor,\n          backgroundColor = _this$props.backgroundColor;\n      var shadowProps = transformShadowPropsForAndroid({\n        shadowOpacity: shadowOpacity,\n        shadowOffset: shadowOffset,\n        shadowRadius: shadowRadius,\n        shadowColor: shadowColor\n      });\n      var absOffsetX = Math.abs(shadowOffset.x);\n      var absOffsetY = Math.abs(shadowOffset.y);\n      var stroke = 30;\n\n      if (absOffsetX >= absOffsetY) {\n        stroke += absOffsetX;\n      } else {\n        stroke += absOffsetY;\n      }\n\n      var path = getPathWithRadius(width + stroke + 2, height + stroke + 2, borderRadius + stroke / 2);\n      return React.createElement(Surface, {\n        height: height,\n        width: width,\n        style: {\n          position: 'absolute'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, React.createElement(Group, {\n        x: -stroke / 2 - 1,\n        y: -stroke / 2 - 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, React.createElement(Shape, _extends({\n        d: path,\n        strokeWidth: stroke,\n        stroke: backgroundColor || 'white'\n      }, shadowProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }]);\n\n  return InnerShadowART;\n}(React.PureComponent);\n\nexport { InnerShadowART as default };\nInnerShadowART.propTypes = ShadowARTType;","map":{"version":3,"sources":["/Users/omarfvivar/Documents/Github/VanPro/node_modules/react-native-neomorph-shadows/src/InnerShadowART.js"],"names":["React","ShadowARTType","Surface","Shape","Group","getPathWithRadius","transformShadowPropsForAndroid","InnerShadowART","props","width","height","borderRadius","shadowRadius","shadowOffset","shadowOpacity","shadowColor","backgroundColor","shadowProps","absOffsetX","Math","abs","x","absOffsetY","y","stroke","path","position","PureComponent","propTypes"],"mappings":";;;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT;AACA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,KAAzB,QAAsC,6BAAtC;AACA,SAASC,iBAAT,EAA4BC,8BAA5B;;IAEqBC,c;;;;;;;;;;;;;6BACV;AAAA,wBAUH,KAAKC,KAVF;AAAA,0CAELC,KAFK;AAAA,UAELA,KAFK,kCAEG,CAFH;AAAA,2CAGLC,MAHK;AAAA,UAGLA,MAHK,mCAGI,CAHJ;AAAA,UAILC,YAJK,eAILA,YAJK;AAAA,UAKLC,YALK,eAKLA,YALK;AAAA,UAMLC,YANK,eAMLA,YANK;AAAA,UAOLC,aAPK,eAOLA,aAPK;AAAA,UAQLC,WARK,eAQLA,WARK;AAAA,UASLC,eATK,eASLA,eATK;AAYP,UAAMC,WAAW,GAAGX,8BAA8B,CAAC;AACjDQ,QAAAA,aAAa,EAAbA,aADiD;AAEjDD,QAAAA,YAAY,EAAZA,YAFiD;AAGjDD,QAAAA,YAAY,EAAZA,YAHiD;AAIjDG,QAAAA,WAAW,EAAXA;AAJiD,OAAD,CAAlD;AAOA,UAAMG,UAAU,GAAGC,IAAI,CAACC,GAAL,CAASP,YAAY,CAACQ,CAAtB,CAAnB;AACA,UAAMC,UAAU,GAAGH,IAAI,CAACC,GAAL,CAASP,YAAY,CAACU,CAAtB,CAAnB;AACA,UAAIC,MAAM,GAAG,EAAb;;AACA,UAAIN,UAAU,IAAII,UAAlB,EAA8B;AAC5BE,QAAAA,MAAM,IAAIN,UAAV;AACD,OAFD,MAEO;AACLM,QAAAA,MAAM,IAAIF,UAAV;AACD;;AACD,UAAMG,IAAI,GAAGpB,iBAAiB,CAC5BI,KAAK,GAAGe,MAAR,GAAiB,CADW,EAE5Bd,MAAM,GAAGc,MAAT,GAAkB,CAFU,EAG5Bb,YAAY,GAAGa,MAAM,GAAG,CAHI,CAA9B;AAMA,aACE,oBAAC,OAAD;AAAS,QAAA,MAAM,EAAEd,MAAjB;AAAyB,QAAA,KAAK,EAAED,KAAhC;AAAuC,QAAA,KAAK,EAAE;AAAEiB,UAAAA,QAAQ,EAAE;AAAZ,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,CAAC,EAAE,CAACF,MAAD,GAAU,CAAV,GAAc,CAAxB;AAA2B,QAAA,CAAC,EAAE,CAACA,MAAD,GAAU,CAAV,GAAc,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,CAAC,EAAEC,IADL;AAEE,QAAA,WAAW,EAAED,MAFf;AAGE,QAAA,MAAM,EAAER,eAAe,IAAI;AAH7B,SAIMC,WAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF,CADF;AAYD;;;;EA9CyCjB,KAAK,CAAC2B,a;;SAA7BpB,c;AAiDrBA,cAAc,CAACqB,SAAf,GAA2B3B,aAA3B","sourcesContent":["/* eslint-disable react-native/no-inline-styles */\nimport React from 'react';\nimport { ShadowARTType } from './types';\nimport { Surface, Shape, Group } from '@react-native-community/art';\nimport { getPathWithRadius, transformShadowPropsForAndroid } from './helpers';\n\nexport default class InnerShadowART extends React.PureComponent {\n  render() {\n    const {\n      width = 0,\n      height = 0,\n      borderRadius,\n      shadowRadius,\n      shadowOffset,\n      shadowOpacity,\n      shadowColor,\n      backgroundColor,\n    } = this.props;\n\n    const shadowProps = transformShadowPropsForAndroid({\n      shadowOpacity,\n      shadowOffset,\n      shadowRadius,\n      shadowColor,\n    });\n\n    const absOffsetX = Math.abs(shadowOffset.x);\n    const absOffsetY = Math.abs(shadowOffset.y);\n    let stroke = 30;\n    if (absOffsetX >= absOffsetY) {\n      stroke += absOffsetX;\n    } else {\n      stroke += absOffsetY;\n    }\n    const path = getPathWithRadius(\n      width + stroke + 2,\n      height + stroke + 2,\n      borderRadius + stroke / 2,\n    );\n\n    return (\n      <Surface height={height} width={width} style={{ position: 'absolute' }}>\n        <Group x={-stroke / 2 - 1} y={-stroke / 2 - 1}>\n          <Shape\n            d={path}\n            strokeWidth={stroke}\n            stroke={backgroundColor || 'white'}\n            {...shadowProps}\n          />\n        </Group>\n      </Surface>\n    );\n  }\n}\n\nInnerShadowART.propTypes = ShadowARTType;\n"]},"metadata":{},"sourceType":"module"}