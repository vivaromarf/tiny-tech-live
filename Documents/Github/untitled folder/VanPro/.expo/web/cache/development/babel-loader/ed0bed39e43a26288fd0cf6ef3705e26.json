{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/omarfvivar/Documents/Github/VanPro/Components/Pages/CreateGoal.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Snackbar } from \"react-native-paper\";\nimport { TextField } from \"../Elements/Fields\";\nimport { CreateContainer } from \"../Layouts/CreateContainer\";\n\nvar createGoal = function createGoal(_ref) {\n  var navigation = _ref.navigation,\n      createNew = _ref.createNew;\n\n  var _useState = useState(\"Daily\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedValue = _useState2[0],\n      setSelectedValue = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      textValue = _useState4[0],\n      updateSelectedText = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cadenceValue = _useState6[0],\n      updateCadenceValue = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      warning = _useState8[0],\n      updateWarning = _useState8[1];\n\n  var data = [{\n    value: \"Daily\"\n  }, {\n    value: \"Weekly\"\n  }, {\n    value: \"Monthly\"\n  }];\n\n  function pressNextSubmit() {}\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(CreateContainer, _extends({\n    title: \"New Goal\",\n    subtitle: \"Let's push\",\n    back: function back() {\n      return navigation.navigate(\"Home\");\n    },\n    nextLabel: \"Create\",\n    next: pressNextSubmit,\n    onSubmitEditing: createNew,\n    first: true\n  }, {\n    navigation: navigation\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), React.createElement(TextField, {\n    style: styles.textInput,\n    placeholder: \"Title\",\n    keyboardType: \"default\",\n    maxLength: 20,\n    autoCapitalize: \"words\",\n    returnKeyType: \"next\",\n    onChangeText: function onChangeText(text) {\n      return updateSelectedText(text);\n    },\n    value: textValue,\n    contrast: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), React.createElement(TextField, {\n    style: styles.textInput,\n    placeholder: \"Frequency Count\",\n    keyboardType: \"numeric\",\n    autoCapitalize: \"none\",\n    returnKeyType: \"next\",\n    onChangeText: function onChangeText(text) {\n      return updateCadenceValue(text);\n    },\n    value: cadenceValue,\n    contrast: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), React.createElement(Snackbar, {\n    visible: warning,\n    onDismiss: function onDismiss() {\n      return updateWarning(false);\n    },\n    style: styles.snackbar,\n    action: {\n      label: \"OK\",\n      onPress: function onPress() {\n        return updateWarning(false);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"All fields must be filled in\"));\n};\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width;\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  textInput: {\n    borderColor: \"black\",\n    borderBottomWidth: 2,\n    height: 30,\n    marginTop: 25,\n    marginBottom: 30,\n    height: 40\n  },\n  snackbar: {\n    position: \"absolute\",\n    bottom: 25,\n    left: width * 0.1,\n    width: width * 0.8\n  }\n});\nexport default createGoal;","map":{"version":3,"sources":["/Users/omarfvivar/Documents/Github/VanPro/Components/Pages/CreateGoal.js"],"names":["React","useState","Snackbar","TextField","CreateContainer","createGoal","navigation","createNew","selectedValue","setSelectedValue","textValue","updateSelectedText","cadenceValue","updateCadenceValue","warning","updateWarning","data","value","pressNextSubmit","navigate","styles","textInput","text","snackbar","label","onPress","Dimensions","get","width","StyleSheet","create","container","flex","borderColor","borderBottomWidth","height","marginTop","marginBottom","position","bottom","left"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, Dimensions } from \"react-native\";\nimport { Snackbar } from \"react-native-paper\";\n\nimport { TextField } from \"../Elements/Fields\";\nimport { CreateContainer } from \"../Layouts/CreateContainer\";\n\nconst createGoal = ({ navigation, createNew }) => {\n  const [selectedValue, setSelectedValue] = useState(\"Daily\");\n  const [textValue, updateSelectedText] = useState(\"\");\n  const [cadenceValue, updateCadenceValue] = useState(\"\");\n  const [warning, updateWarning] = useState(false);\n\n  let data = [\n    {\n      value: \"Daily\"\n    },\n    {\n      value: \"Weekly\"\n    },\n    {\n      value: \"Monthly\"\n    }\n  ];\n\n  function pressNextSubmit() {}\n\n  return (\n    <React.Fragment>\n      <CreateContainer\n        title=\"New Goal\"\n        subtitle=\"Let's push\"\n        back={() => navigation.navigate(\"Home\")}\n        nextLabel=\"Create\"\n        next={pressNextSubmit}\n        onSubmitEditing={createNew}\n        first\n        {...{ navigation }}\n      >\n        <TextField\n          style={styles.textInput}\n          placeholder=\"Title\"\n          keyboardType=\"default\"\n          maxLength={20}\n          autoCapitalize=\"words\"\n          returnKeyType=\"next\"\n          onChangeText={text => updateSelectedText(text)}\n          value={textValue}\n          contrast\n        />\n        <TextField\n          style={styles.textInput}\n          placeholder=\"Frequency Count\"\n          keyboardType=\"numeric\"\n          autoCapitalize=\"none\"\n          returnKeyType=\"next\"\n          onChangeText={text => updateCadenceValue(text)}\n          value={cadenceValue}\n          contrast\n        />\n      </CreateContainer>\n      <Snackbar\n        visible={warning}\n        onDismiss={() => updateWarning(false)}\n        style={styles.snackbar}\n        action={{\n          label: \"OK\",\n          onPress: () => updateWarning(false)\n        }}\n      >\n        All fields must be filled in\n      </Snackbar>\n    </React.Fragment>\n  );\n};\nconst { width } = Dimensions.get(\"window\");\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  textInput: {\n    borderColor: \"black\",\n    borderBottomWidth: 2,\n    height: 30,\n    marginTop: 25,\n    marginBottom: 30,\n    height: 40\n  },\n  snackbar: {\n    position: \"absolute\",\n    bottom: 25,\n    left: width * 0.1,\n    width: width * 0.8\n  }\n});\n\nexport default createGoal;\n"]},"metadata":{},"sourceType":"module"}