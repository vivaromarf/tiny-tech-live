{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/omarfvivar/Documents/Github/VanPro/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { firebase_sign_in_anonymous, firebase_sign_up, firebase_sign_in, firebase_sign_out } from \"./firebase\";\nimport { createAppContainer, createSwitchNavigator } from \"react-navigation\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport { createBottomTabNavigator } from \"react-navigation-tabs\";\nimport { AppLoading } from \"expo\";\nimport * as Font from \"expo-font\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { Asset } from \"expo-asset\";\nimport Welcome from \"./Components/Pages/Welcome\";\nimport Login from \"./Components/Pages/Login\";\nimport SignUpEmail from \"./Components/Pages/SignUpEmail\";\nimport SignUpPassword from \"./Components/Pages/SignUpPassword\";\nimport Home from \"./Components/Pages/Home\";\nimport HomeTab from \"./Components/Pages/HomeTab\";\nimport CreateGoal from \"./Components/Pages/CreateGoal\";\n\nvar SFProTextMedium = require(\"./assets/fonts/SF-Pro-Text-Medium.otf\");\n\nvar SFProTextHeavy = require(\"./assets/fonts/SF-Pro-Text-Heavy.otf\");\n\nvar SFProTextBold = require(\"./assets/fonts/SF-Pro-Text-Bold.otf\");\n\nvar SFProTextSemibold = require(\"./assets/fonts/SF-Pro-Text-Semibold.otf\");\n\nvar SFProTextRegular = require(\"./assets/fonts/SF-Pro-Text-Regular.otf\");\n\nvar SFProTextLight = require(\"./assets/fonts/SF-Pro-Text-Light.otf\");\n\nvar Roboto_medium = require(\"./assets/fonts/Roboto_medium.ttf\");\n\nvar Roboto = require(\"./assets/fonts/Roboto.ttf\");\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isReady: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.isReady) {\n        return React.createElement(AppLoading, {\n          autoHideSplash: true,\n          startAsync: this.loadStaticResources,\n          onFinish: function onFinish() {\n            return _this2.setState({\n              isReady: true\n            });\n          },\n          onError: console.warn,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 9\n          }\n        });\n      } else {\n        return React.createElement(AppNavigator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 14\n          }\n        });\n      }\n    }\n  }, {\n    key: \"loadStaticResources\",\n    value: function loadStaticResources() {\n      var images, cacheImages, fonts, icons;\n      return _regeneratorRuntime.async(function loadStaticResources$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              images = [require(\"./assets/images/logo.jpg\")];\n              cacheImages = images.map(function (image) {\n                return Asset.fromModule(image).downloadAsync();\n              });\n              fonts = Font.loadAsync({\n                \"SFProText-Medium\": SFProTextMedium,\n                \"SFProText-Heavy\": SFProTextHeavy,\n                \"SFProText-Bold\": SFProTextBold,\n                \"SFProText-Semibold\": SFProTextSemibold,\n                \"SFProText-Regular\": SFProTextRegular,\n                \"SFProText-Light\": SFProTextLight,\n                Roboto_medium: Roboto_medium,\n                Roboto: Roboto\n              });\n              icons = Font.loadAsync(Feather.font);\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(Promise.all([].concat(_toConsumableArray(cacheImages), [fonts, icons])));\n\n            case 7:\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]], Promise);\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar StackNavigatorOptions = {\n  headerMode: \"none\",\n  cardStyle: {\n    backgroundColor: \"white\"\n  }\n};\nvar SignUpNavigator = createStackNavigator({\n  SignUpEmail: {\n    screen: SignUpEmail\n  },\n  SignUpPassword: {\n    screen: SignUpPassword\n  }\n}, StackNavigatorOptions);\nvar BottomNavigator = createBottomTabNavigator({\n  Home: {\n    screen: Home\n  },\n  createGoal: {\n    screen: CreateGoal\n  }\n}, {\n  animationEnabled: true,\n  tabBarComponent: HomeTab,\n  tabBarPosition: \"bottom\"\n});\nvar AppNavigator = createAppContainer(createSwitchNavigator({\n  Welcome: {\n    screen: Welcome\n  },\n  Login: {\n    screen: Login\n  },\n  SignUp: {\n    screen: SignUpNavigator\n  },\n  BottomNavigator: {\n    screen: BottomNavigator\n  }\n}, StackNavigatorOptions));\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/omarfvivar/Documents/Github/VanPro/App.js"],"names":["StatusBar","React","firebase_sign_in_anonymous","firebase_sign_up","firebase_sign_in","firebase_sign_out","createAppContainer","createSwitchNavigator","createStackNavigator","createBottomTabNavigator","AppLoading","Font","Feather","Asset","Welcome","Login","SignUpEmail","SignUpPassword","Home","HomeTab","CreateGoal","SFProTextMedium","require","SFProTextHeavy","SFProTextBold","SFProTextSemibold","SFProTextRegular","SFProTextLight","Roboto_medium","Roboto","App","state","isReady","loadStaticResources","setState","console","warn","images","cacheImages","map","image","fromModule","downloadAsync","fonts","loadAsync","icons","font","Promise","all","error","Component","StackNavigatorOptions","headerMode","cardStyle","backgroundColor","SignUpNavigator","screen","BottomNavigator","createGoal","animationEnabled","tabBarComponent","tabBarPosition","AppNavigator","SignUp","styles","StyleSheet","create","container","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { StyleSheet, Text, View, TouchableWithoutFeedback } from \"react-native\";\nimport { firebase_sign_in_anonymous, firebase_sign_up, firebase_sign_in, firebase_sign_out } from \"./firebase\";\nimport { createAppContainer, createSwitchNavigator } from \"react-navigation\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport { createBottomTabNavigator } from \"react-navigation-tabs\";\n\nimport { AppLoading } from \"expo\";\nimport * as Font from \"expo-font\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { Asset } from \"expo-asset\";\n\nimport Welcome from \"./Components/Pages/Welcome\";\nimport Login from \"./Components/Pages/Login\";\nimport SignUpEmail from \"./Components/Pages/SignUpEmail\";\nimport SignUpPassword from \"./Components/Pages/SignUpPassword\";\nimport Home from \"./Components/Pages/Home\";\nimport HomeTab from \"./Components/Pages/HomeTab\";\nimport CreateGoal from \"./Components/Pages/CreateGoal\";\n\nconst SFProTextMedium = require(\"./assets/fonts/SF-Pro-Text-Medium.otf\");\nconst SFProTextHeavy = require(\"./assets/fonts/SF-Pro-Text-Heavy.otf\");\nconst SFProTextBold = require(\"./assets/fonts/SF-Pro-Text-Bold.otf\");\nconst SFProTextSemibold = require(\"./assets/fonts/SF-Pro-Text-Semibold.otf\");\nconst SFProTextRegular = require(\"./assets/fonts/SF-Pro-Text-Regular.otf\");\nconst SFProTextLight = require(\"./assets/fonts/SF-Pro-Text-Light.otf\");\nconst Roboto_medium = require(\"./assets/fonts/Roboto_medium.ttf\");\nconst Roboto = require(\"./assets/fonts/Roboto.ttf\");\n\nclass App extends React.Component {\n  state = {\n    isReady: false\n  };\n  render() {\n    if (!this.state.isReady) {\n      return (\n        <AppLoading\n          autoHideSplash={true}\n          startAsync={this.loadStaticResources}\n          onFinish={() => this.setState({ isReady: true })}\n          onError={console.warn}\n        />\n      );\n    } else {\n      return <AppNavigator />;\n    }\n  }\n  async loadStaticResources() {\n    try {\n      const images = [require(\"./assets/images/logo.jpg\")];\n      const cacheImages = images.map(image => {\n        return Asset.fromModule(image).downloadAsync();\n      });\n      const fonts = Font.loadAsync({\n        \"SFProText-Medium\": SFProTextMedium,\n        \"SFProText-Heavy\": SFProTextHeavy,\n        \"SFProText-Bold\": SFProTextBold,\n        \"SFProText-Semibold\": SFProTextSemibold,\n        \"SFProText-Regular\": SFProTextRegular,\n        \"SFProText-Light\": SFProTextLight,\n        Roboto_medium: Roboto_medium,\n        Roboto: Roboto\n      });\n      const icons = Font.loadAsync(Feather.font);\n      await Promise.all([...cacheImages, fonts, icons]);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\nconst StackNavigatorOptions = {\n  headerMode: \"none\",\n  cardStyle: {\n    backgroundColor: \"white\"\n\n\n\n    \n  }\n};\n\nconst SignUpNavigator = createStackNavigator(\n  {\n    SignUpEmail: { screen: SignUpEmail },\n    SignUpPassword: { screen: SignUpPassword }\n  },\n  StackNavigatorOptions\n);\n\nconst BottomNavigator = createBottomTabNavigator(\n  {\n    Home: { screen: Home },\n    createGoal: { screen: CreateGoal }\n  },\n  {\n    animationEnabled: true,\n    tabBarComponent: HomeTab,\n    tabBarPosition: \"bottom\"\n  }\n);\nconst AppNavigator = createAppContainer(\n  createSwitchNavigator(\n    {\n      Welcome: { screen: Welcome },\n      Login: { screen: Login },\n      SignUp: { screen: SignUpNavigator },\n      BottomNavigator: { screen: BottomNavigator }\n    },\n    StackNavigatorOptions\n  )\n);\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n    });\n"]},"metadata":{},"sourceType":"module"}