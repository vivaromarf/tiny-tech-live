{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/omarfvivar/Documents/Github/VanPro/node_modules/react-native-neomorph-shadows/src/ShadowFlex.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { ShadowFlexType } from \"./types\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Shadow from \"./Shadow\";\n\nvar ShadowFlex = function (_React$PureComponent) {\n  _inherits(ShadowFlex, _React$PureComponent);\n\n  var _super = _createSuper(ShadowFlex);\n\n  function ShadowFlex(props) {\n    var _this;\n\n    _classCallCheck(this, ShadowFlex);\n\n    _this = _super.call(this, props);\n\n    _this._onLayout = function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      var _nativeEvent$layout = nativeEvent.layout,\n          width = _nativeEvent$layout.width,\n          height = _nativeEvent$layout.height;\n      console.log(nativeEvent.layout);\n\n      _this.setState({\n        shadowStyle: _objectSpread(_objectSpread({}, _this.state.shadowStyle), {}, {\n          width: width,\n          height: height\n        }),\n        layoutFinished: true\n      });\n    };\n\n    var style = props.style;\n    _this.state = {\n      shadowStyle: {\n        shadowOffset: style == null ? void 0 : style.shadowOffset,\n        shadowOpacity: style == null ? void 0 : style.shadowOpacity,\n        shadowRadius: style == null ? void 0 : style.shadowRadius,\n        shadowColor: style == null ? void 0 : style.shadowColor,\n        borderRadius: style == null ? void 0 : style.borderRadius,\n        backgroundColor: style == null ? void 0 : style.backgroundColor,\n        width: 0,\n        height: 0,\n        position: 'absolute'\n      },\n      layoutFinished: false\n    };\n    return _this;\n  }\n\n  _createClass(ShadowFlex, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          style = _this$props.style,\n          children = _this$props.children,\n          otherProps = _objectWithoutProperties(_this$props, [\"style\", \"children\"]);\n\n      if (Platform.OS === 'android') {\n        var _this$state = this.state,\n            layoutFinished = _this$state.layoutFinished,\n            shadowStyle = _this$state.shadowStyle;\n\n        var elevation = style.elevation,\n            shadowOpacity = style.shadowOpacity,\n            shadowRadius = style.shadowRadius,\n            shadowOffset = style.shadowOffset,\n            shadowColor = style.shadowColor,\n            backgroundColor = style.backgroundColor,\n            overflow = style.overflow,\n            otherStyle = _objectWithoutProperties(style, [\"elevation\", \"shadowOpacity\", \"shadowRadius\", \"shadowOffset\", \"shadowColor\", \"backgroundColor\", \"overflow\"]);\n\n        return React.createElement(View, {\n          onLayout: this._onLayout,\n          style: otherStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 9\n          }\n        }, layoutFinished && React.createElement(Shadow, _extends({\n          style: shadowStyle\n        }, otherProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 30\n          }\n        })), children);\n      } else {\n        return React.createElement(Shadow, _extends({\n          style: style\n        }, otherProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }\n        }), children);\n      }\n    }\n  }]);\n\n  return ShadowFlex;\n}(React.PureComponent);\n\nexport { ShadowFlex as default };\nShadowFlex.propTypes = ShadowFlexType;","map":{"version":3,"sources":["/Users/omarfvivar/Documents/Github/VanPro/node_modules/react-native-neomorph-shadows/src/ShadowFlex.js"],"names":["React","ShadowFlexType","Shadow","ShadowFlex","props","_onLayout","nativeEvent","layout","width","height","console","log","setState","shadowStyle","state","layoutFinished","style","shadowOffset","shadowOpacity","shadowRadius","shadowColor","borderRadius","backgroundColor","position","children","otherProps","Platform","OS","elevation","overflow","otherStyle","PureComponent","propTypes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ShadowFlexType } from './types';\nimport { View, Platform } from 'react-native';\nimport Shadow from './Shadow';\n\nexport default class ShadowFlex extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const { style } = props;\n    this.state = {\n      shadowStyle: {\n        shadowOffset: style?.shadowOffset,\n        shadowOpacity: style?.shadowOpacity,\n        shadowRadius: style?.shadowRadius,\n        shadowColor: style?.shadowColor,\n        borderRadius: style?.borderRadius,\n        backgroundColor: style?.backgroundColor,\n        width: 0,\n        height: 0,\n        position: 'absolute',\n      },\n      layoutFinished: false,\n    };\n  }\n\n  _onLayout = ({ nativeEvent }) => {\n    const { width, height } = nativeEvent.layout;\n    console.log(nativeEvent.layout);\n    this.setState({\n      shadowStyle: {\n        ...this.state.shadowStyle,\n        width,\n        height,\n      },\n      layoutFinished: true,\n    });\n  };\n\n  render() {\n    const { style, children, ...otherProps } = this.props;\n    if (Platform.OS === 'android') {\n      const { layoutFinished, shadowStyle } = this.state;\n      const {\n        elevation,\n        shadowOpacity,\n        shadowRadius,\n        shadowOffset,\n        shadowColor,\n        backgroundColor,\n        overflow,\n        ...otherStyle\n      } = style;\n      return (\n        <View onLayout={this._onLayout} style={otherStyle}>\n          {layoutFinished && <Shadow style={shadowStyle} {...otherProps} />}\n          {children}\n        </View>\n      );\n    } else {\n      return (\n        <Shadow style={style} {...otherProps}>\n          {children}\n        </Shadow>\n      );\n    }\n  }\n}\n\nShadowFlex.propTypes = ShadowFlexType;\n"]},"metadata":{},"sourceType":"module"}